### Welcome to the Redflags API


## Overview
The Redflags API provides a comprehensive set of endpoints for managing user-created red flags. It allows users to perform operations such as creating, reading, updating, and deleting red flag records. This API helps users document red flags in their interactions.

Key Features
- **CRUD Operations: Create, read, update, and delete redflag records.
- **Comprehensive Documentation: Access detailed documentation for each endpoint, including request and response formats.

### Getting Started
In order to keep AWS costs down please try the endpoints on localhost at port 5000 first:

http://localhost:5000

If you want to go ahead and try the endpoints against AWS (where the service is hosted) use the following base link:

http://redflags-env.eba-phvwsvmq.eu-north-1.elasticbeanstalk.com

And then just att the desired endpoint to it




### Authentication
To interact with the Redflags API, you do not need any form of authentication.

Swagger documentation is available at:

http://localhost:5000/swagger-ui/index.html

### User endpoints:

## Get all users
GET http://localhost:5000/users
Content-Type: application/json

###
## Create a new user
POST http://localhost:5000/users
Content-Type: application/json

{
  "username": "fox45",
  "password": "password123"
}

###
GET  http://localhost:5000/users/{id}
Content-Type: application/json
###
GET  http://localhost:5000/users/1
###

###
DELETE  http://localhost:5000/users/{id}
Content-Type: application/json
###
DELETE http://localhost:5000/users/1

###
PATCH  http://localhost:5000/users/{id}
Content-Type: application/json
###
PATCH http://localhost:5000/users/1
Content-Type: application/json

{
  "username": "jane234",
  "password": ")%)**3!"
}

### Redflag endpoints

## Get all red flags
GET http://localhost:5000/redflags
Content-Type: application/json

###
## Create a new user
## Keep id as null, backend sets it automatically.
## Choose one of the following: "BEHAVIOR", "COMMUNICATION", "EMOTIONAL", "FINANCIAL" or "PHYSICAL"
## Backend sets the time of the creation automatically
## You must add an existing user because a redflag cannot be created without specifying an existing user.
## It is recommended to use the endpoint GET /users to find out which users exist
POST http://localhost:5000/redflags
Content-Type: application/json

{ "id": null,
  "description": "New Description",
  "category": "BEHAVIOR",
  "examples": "Example Description",
  "advice": "Advice on this behavior",
  "createdAt": null,
  "user": {
    "id": 1,
    "username": "john_doe" }
}

###
GET  http://localhost:5000/redflags/{id}
Content-Type: application/json
###
GET  http://localhost:5000/redflags/2
###

DELETE  http://localhost:5000/redflags/{id}
Content-Type: application/json
###
DELETE http://localhost:5000/redflags/2

###

PATCH  http://localhost:5000/redflags/{id}
Content-Type: application/json
###
PATCH http://localhost:5000/redflags/2
Content-Type: application/json

{ "id": null,
  "description": "New Description",
  "category": "BEHAVIOR",
  "examples": "Example Description",
  "advice": "Advice on this behavior",
  "createdAt": null,
  "user": {
    "id": 1,
    "username": "john_doe" }
}
